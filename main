#!/usr/bin/python
# -*- coding: UTF-8 -*-
# import dir.mpc
#import dir.data_processing
#import dir.callmpc
# import dir.trystatus
#import dir.plotfigure
#import dir.rec
import dir.ground_data
import dir.callmpc
import fairness.callmpc_fairness
#import dir.newplotfigure
import matplotlib.pyplot as plt
import numpy as np
import matplotlib.ticker as ticker
# dir.data_processing.evdemand_combine_gps()
# dir.data_processing.evdemandwithregion()
# dir.data_processing.evdemand_timeslot_region_to_region()
# dir.data_processing.get_prediction_error()

# dir.callmpc.call_mpc(10,0.1)
# dir.callmpc.call_mpc(8,0.1)
# dir.callmpc.call_mpc(6,0.1)
# dir.callmpc.call_mpc(4,0.1)

# dir.callmpc.call_mpc(10,0.01)
# dir.callmpc.call_mpc(8,0.01)
# dir.callmpc10.call_mpc(4,1)
# dir.callmpc.call_mpc(4,0.01,3)

# for i in range(0,1):
#     dir.callmpc.call_mpc(4,0.5,i)
#
# dir.callmpc.call_mpc(10,1)
# dir.callmpc.call_mpc(8,0.01) #out of memory
# dir.callmpc.call_mpc(6,1)
# dir.callmpc.call_mpc(4,1)
# dir.callmpc.call_mpc(6,0.01)

# 8, 1 finish
# dir.callmpc.call_mpc(4,10)
# dir.callmpc.call_mpc(4,1)
#
# # dir.callmpc.call_mpc(4,0.1)
# dir.callmpc.call_mpc(4,0.1)
# dir.callmpc.call_mpc(4,5)
# dir.callmpc.call_mpc(8,10)
# dir.callmpc.call_mpc(8,100)


# dir.ground_data.ground_supply()

# dir.rec.call_rec()
#
# dir.newplotfigure.temporal()
# dir.newplotfigure.utilization()

# dir.newplotfigure.betaratio()
# dir.newplotfigure.betautilization()
# dir.newplotfigure.betaregionratio()
# cc=[]
# for i in range(3):
#     one=[]
#     for j in range(2):
#         one.append(i+j)
#     cc.append(one)
#
# for i in range(3):
#     for j in range(2):
#         print cc[i][j]


# beta1 = 0.01
# beta2 = 0.01
# fairness.callmpc_fairness.call_mpc_fairness(1,beta1,beta2,2)
# fairness.callmpc_fairness.call_mpc_fairness(2,beta1,beta2,3)

# beta1 = 0.001
# beta2 = 0.001
# fairness.callmpc_fairness.call_mpc_fairness(1,beta1,beta2,4)
# fairness.callmpc_fairness.call_mpc_fairness(2,beta1,beta2,5)

beta1 = 0.1
beta2 = 0.1
# fairness.callmpc_fairness.call_mpc_fairness(1,0.1,0.1,0) # K = 1,beta1 = 0.1,beta2 = 0,2
#
# print 'Round 1 begin'
# fairness.callmpc_fairness.call_mpc_fairness(1, 0.1, 0.1,1) # K = 3
#
# print 'Round 2 begin'
# fairness.callmpc_fairness.call_mpc_fairness(2, 0.1, 0.1, 2) # K = 3
#
# print 'Round 3 begin'
# fairness.callmpc_fairness.call_mpc_fairness(1,0.01,0.01,3)# K=3

# print 'Round 4 begin'
# fairness.callmpc_fairness.call_mpc_fairness(1,0.01,0.01,4)# K=3

# print 'Round 5 begin'
# fairness.callmpc_fairness.call_mpc_fairness(1,0.01,0.01,5)# K=3 ， not fairness aware,pure rebalancing with disruption

# print 'Round 6 begin'
# fairness.callmpc_fairness.call_mpc_fairness(1,0.01,0.01,6)# K=3 ，fairness aware

# print 'Round 7 begin'
# fairness.callmpc_fairness.call_mpc_fairness(1, 0.1, 0.1, 7)  # K=3，fairness aware





# print 'Round 8 begin'
# fairness.callmpc_fairness.call_mpc_fairness(1, 0.1, 0.1, 8)  # K=3，fairness aware AFC

# print 'Round 9 begin'
# fairness.callmpc_fairness.call_mpc_fairness(1, 0.1, 0.1, 9)  # K=3 fairness not aware, pure rebalancing with disruption

# print 'Round 10 begin'
# fairness.callmpc_fairness.call_mpc_fairness(1, 0.01, 0.01, 10)  # K=3 fairness aware AFC
# fairness.callmpc_fairness.call_mpc_fairness(1, 0.1, 0.1, 11)  # K=3 fairness aware AFC
# fairness.callmpc_fairness.call_mpc_fairness(1,0.001,0.001,12)  # K=3 fairness aware AFC

# fairness.callmpc_fairness.call_mpc_fairness(2, 0.01, 0.01, 13)  # K=3 fairness aware AFC
# fairness.callmpc_fairness.call_mpc_fairness(2, 0.1, 0.1, 14)  # K=3 fairness aware AFC
# fairness.callmpc_fairness.call_mpc_fairness(2,0.001,0.001,15)  # K=3 fairness aware AFC


# fairness.callmpc_fairness.call_mpc_fairness(1, 0.1, 0.1, 16)  # No disruption Oracle
# fairness.callmpc_fairness.call_mpc_fairness(1, 0.01, 0.01, 17) # No disruption Oracle
# fairness.callmpc_fairness.call_mpc_fairness(1,0.001,0.001,18) # No disruption Oracle

# fairness.callmpc_fairness.call_mpc_fairness(1, 0.1, 0.1, 19)  # disruption but Fairness not aware
# fairness.callmpc_fairness.call_mpc_fairness(1, 0.01, 0.01, 20) # disruption but Fairness not aware
# fairness.callmpc_fairness.call_mpc_fairness(1,0.001,0.001,21) # disruption but Fairness not aware

# fairness.callmpc_fairness.call_mpc_fairness(1, 0.1, 0.1, 22)  # p square (without fairness)
# fairness.callmpc_fairness.call_mpc_fairness(1, 0.01, 0.01, 23) # p sqare
# fairness.callmpc_fairness.call_mpc_fairness(1,0.001,0.001,24) # p square(without fairness)

# fairness.callmpc_fairness.call_mpc_fairness(2, 0.1, 0.1, 25)  # K=3 fairness aware AFC
# fairness.callmpc_fairness.call_mpc_fairness(2, 0.01, 0.01, 26)  # K=3 fairness aware AFC
# fairness.callmpc_fairness.call_mpc_fairness(2, 0.001,0.001,27)  # K=3 fairness aware AFC
# fairness.callmpc_fairness.call_mpc_fairness(2, 0.1, 0.01, 28)  # K=3 fairness aware AFC
# fairness.callmpc_fairness.call_mpc_fairness(2, 0.01, 0.1, 29)  # K=3 fairness aware AFC
# fairness.callmpc_fairness.call_mpc_fairness(2, 0.001,0.001,30)  # K=3 fairness aware AFC
# fairness.callmpc_fairness.call_mpc_fairness(2, 0.1, 0.1, 31)  # K=3 fairness aware AFC
# fairness.callmpc_fairness.call_mpc_fairness(2, 0.01, 0.01, 32)  # K=3 fairness aware AFC
# fairness.callmpc_fairness.call_mpc_fairness(2, 0.001,0.001,33)  # K=3 fairness aware AFC
#
# fairness.callmpc_fairness.call_mpc_fairness(1, 0.1, 0.1, 34)  # K=3 fairness aware AFC
# fairness.callmpc_fairness.call_mpc_fairness(1, 0.01, 0.01, 35)  # K=3 fairness aware AFC
# fairness.callmpc_fairness.call_mpc_fairness(1, 0.001,0.001,36)  # K=3 fairness aware AFC
# fairness.callmpc_fairness.call_mpc_fairness(1, 0.1, 0.1, 37)  # K=3 fairness aware AFC
# fairness.callmpc_fairness.call_mpc_fairness(1, 0.01, 0.01, 38)  # K=3 fairness aware AFC
# fairness.callmpc_fairness.call_mpc_fairness(1, 0.001,0.001,39)  # K=3 fairness aware AFC
# fairness.callmpc_fairness.call_mpc_fairness(1, 0.1, 0.1, 40)  # K=3 fairness aware AFC
# fairness.callmpc_fairness.call_mpc_fairness(1, 0.01, 0.01, 41)  # K=3 fairness aware AFC
# fairness.callmpc_fairness.call_mpc_fairness(1, 0.001,0.001,42)  # K=3 fairness aware AFC


# fairness.callmpc_fairness.call_mpc_fairness(2,0.1,0.1,43)  # charging and rebalancing under disruption
# fairness.callmpc_fairness.call_mpc_fairness(2,0.1,0.1,44)  # charging and rebalancing under disruption
# fairness.callmpc_fairness.call_mpc_fairness(2,0.1,0.1,45)  # charging and rebalancing under disruption

# fairness.callmpc_fairness.call_mpc_fairness(1,0.1,0.1,46)  # charging and rebalancing under disruption
# fairness.callmpc_fairness.call_mpc_fairness(1,0.1,0.1,47)  # charging and rebalancing under disruption
# fairness.callmpc_fairness.call_mpc_fairness(1,0.1,0.1,48)  # charging and rebalancing under disruption


# fairness.callmpc_fairness.call_mpc_fairness(2, 0.1, 0.1, 49)  # Oracle+idle driving distance
# fairness.callmpc_fairness.call_mpc_fairness(2, 0.01, 0.01, 50)  #Oracle+idle driving distance
# fairness.callmpc_fairness.call_mpc_fairness(2, 0.001,0.001,51)  # Oracle+idle driving distance

# fairness.callmpc_fairness.call_mpc_fairness(1, 0.1, 0.1, 52)  # Oracle+idle driving distance
# fairness.callmpc_fairness.call_mpc_fairness(1, 0.01, 0.01, 53)  # Oracle+idle driving distance
# fairness.callmpc_fairness.call_mpc_fairness(1, 0.001,0.001,54)  #Oracle+idle driving distance

# fairness.callmpc_fairness.call_mpc_fairness(2, 0.1, 0.1, 55)  # afc
# fairness.callmpc_fairness.call_mpc_fairness(2, 0.01, 0.01, 56) # afc
# fairness.callmpc_fairness.call_mpc_fairness(2, 0.001,0.001,57)  # afc

# fairness.callmpc_fairness.call_mpc_fairness(1, 0.1, 0.1, 58)  # afc
# fairness.callmpc_fairness.call_mpc_fairness(1, 0.01, 0.01, 59)  # afc
# fairness.callmpc_fairness.call_mpc_fairness(1, 0.001,0.001,60) # afc

# fairness.callmpc_fairness.call_mpc_fairness(1, 0.1,0.1,61)  #Oracle+idle driving distance

# fairness.callmpc_fairness.call_mpc_fairness(1, 0.1,0.1,62)  # Oracle+idle driving distance       use this!

fairness.callmpc_fairness.call_mpc_fairness(1, 0.1, 0.1, 63)  # afc                            use this!

fairness.callmpc_fairness.call_mpc_fairness(2, 0.1, 0.1, 64)  # afc                            use this!